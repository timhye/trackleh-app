"""add_transaction_type_to_categories

Revision ID: fe7cab3bb6c8
Revises: 50c05a750de4
Create Date: 2025-07-09 10:58:56.341536

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'fe7cab3bb6c8'
down_revision: Union[str, Sequence[str], None] = '50c05a750de4'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # Step 1: Add transaction_type column as nullable first
    op.add_column('categories', sa.Column('transaction_type', sa.Enum('income', 'expense', name='transactiontype'), nullable=True))
    
    # Step 2: Drop the old unique constraint on name
    op.drop_constraint(op.f('categories_name_key'), 'categories', type_='unique')
    
    # Step 3: Update existing categories to be 'expense' type
    # (Assuming all existing categories are expense categories)
    op.execute("UPDATE categories SET transaction_type = 'expense' WHERE transaction_type IS NULL")
    
    # Step 4: Make transaction_type non-nullable now that all rows have values
    op.alter_column('categories', 'transaction_type', nullable=False)
    
    # Step 5: Create index on transaction_type
    op.create_index(op.f('ix_categories_transaction_type'), 'categories', ['transaction_type'], unique=False)
    
    # Step 6: Create composite unique constraint
    op.create_unique_constraint('uq_category_name_type', 'categories', ['name', 'transaction_type'])
    
    # Step 7: Insert income categories
    op.execute("""
        INSERT INTO categories (name, transaction_type, created_at, updated_at) VALUES 
        ('Salary', 'income', NOW(), NOW()),
        ('Freelance', 'income', NOW(), NOW()),
        ('Investment Returns', 'income', NOW(), NOW()),
        ('Business Income', 'income', NOW(), NOW()),
        ('Other Income', 'income', NOW(), NOW())
    """)


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('uq_category_name_type', 'categories', type_='unique')
    op.drop_index(op.f('ix_categories_transaction_type'), table_name='categories')
    op.create_unique_constraint(op.f('categories_name_key'), 'categories', ['name'])
    op.drop_column('categories', 'transaction_type')
    # ### end Alembic commands ###
